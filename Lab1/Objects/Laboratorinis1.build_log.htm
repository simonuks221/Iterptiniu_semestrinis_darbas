<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.37.0.0
Copyright (C) 2022 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Simonas Riauka, Elinvision, LIC=AN08P-6FIWP-HCMJ4-T81W6-ZYPSU-1LV4Y
 
Tool Versions:
Toolchain:       MDK-ARM Community  Version: 5.37.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.18
Assembler:       Armasm.exe V6.18
Linker/Locator:  ArmLink.exe V6.18
Library Manager: ArmAr.exe V6.18
Hex Converter:   FromElf.exe V6.18
CPU DLL:         SARMCM3.DLL V5.37.0.0
Dialog DLL:      DARMCM1.DLL V1.19.6.0
Target DLL:      UL2CM3.DLL V1.164.7.0
Dialog DLL:      TARMCM1.DLL V1.14.6.0
 
<h2>Project:</h2>
C:\Users\simon\Desktop\UNI\6pusmetis\Iterptines\Semestrinis\Lab1\Laboratorinis1.uvprojx
Project File Date:  04/05/2023

<h2>Output:</h2>
*** Using Compiler 'V6.18', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Rebuild target 'Target 1'
main.c(41): warning: implicit conversion loses floating-point precision: 'double' to 'float' [-Wimplicit-float-conversion]
        pitch = asin(-((float)accX/ 32768.0f/acc_full_scale)); //Daliname is 2^15 gauti reiksmei nuo 0 iki 1
              ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c(41): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        pitch = asin(-((float)accX/ 32768.0f/acc_full_scale)); //Daliname is 2^15 gauti reiksmei nuo 0 iki 1
                ~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c(42): warning: implicit conversion loses floating-point precision: 'double' to 'float' [-Wimplicit-float-conversion]
        roll = asin((float)accY/ 32768.0f/acc_full_scale/cos((float)pitch)); //32768.0f
             ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.c(42): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        roll = asin((float)accY/ 32768.0f/acc_full_scale/cos((float)pitch)); //32768.0f
                                                         ~~~ ^~~~~~~~~~~~
main.c(42): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        roll = asin((float)accY/ 32768.0f/acc_full_scale/cos((float)pitch)); //32768.0f
                    ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
main.c(44): warning: implicit conversion loses floating-point precision: 'double' to 'float' [-Wimplicit-float-conversion]
        MX2 = MX1 * cos(pitch) + MZ1 * sin(pitch);
            ~ ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
main.c(44): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MX2 = MX1 * cos(pitch) + MZ1 * sin(pitch);
                                       ~~~ ^~~~~
main.c(44): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MX2 = MX1 * cos(pitch) + MZ1 * sin(pitch);
                                 ^~~ ~
main.c(44): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MX2 = MX1 * cos(pitch) + MZ1 * sin(pitch);
                    ~~~ ^~~~~
main.c(44): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MX2 = MX1 * cos(pitch) + MZ1 * sin(pitch);
              ^~~ ~
main.c(45): warning: implicit conversion loses floating-point precision: 'double' to 'float' [-Wimplicit-float-conversion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
main.c(45): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
                                                                             ~~~ ^~~~~
main.c(45): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
                                                                   ~~~ ^~~~
main.c(45): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
                                                               ^~~~
main.c(45): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
                                                   ~~~ ^~~~
main.c(45): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
                                             ^~~ ~
main.c(45): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
                                ~~~ ^~~~~
main.c(45): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
                    ~~~ ^~~~
main.c(45): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MY2 = MX1 * sin(roll) * sin(pitch) + MY1 * cos(roll) - MZ1*sin(roll)*cos(pitch);
              ^~~ ~
main.c(46): warning: implicit conversion loses floating-point precision: 'double' to 'float' [-Wimplicit-float-conversion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
            ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
main.c(46): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
                                                                    ~~~ ^~~~~
main.c(46): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
                                                          ~~~ ^~~~
main.c(46): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
                                                      ^~~~
main.c(46): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
                                            ~~~ ^~~~
main.c(46): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
                                        ^~~~
main.c(46): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
                             ~~~ ^~~~~
main.c(46): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
                   ~~~ ^~~~
main.c(46): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        MZ2 = -MX1*cos(roll)*sin(pitch)+MY1*sin(roll)+MZ1*cos(roll)*cos(pitch);
              ^~~~~
main.c(48): warning: implicit conversion turns floating-point number into integer: 'double' to 'int' [-Wfloat-conversion]
        D = atan2(MY2, MX2) * 180.0f/3.14f; //Su atkompensavimais
          ~ ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~
main.c(48): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        D = atan2(MY2, MX2) * 180.0f/3.14f; //Su atkompensavimais
                                    ~^~~~~
main.c(48): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        D = atan2(MY2, MX2) * 180.0f/3.14f; //Su atkompensavimais
                            ~ ^~~~~~
main.c(48): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        D = atan2(MY2, MX2) * 180.0f/3.14f; //Su atkompensavimais
            ~~~~~      ^~~
main.c(48): warning: implicit conversion increases floating-point precision: 'float' to 'double' [-Wdouble-promotion]
        D = atan2(MY2, MX2) * 180.0f/3.14f; //Su atkompensavimais
            ~~~~~ ^~~
main.c(55): warning: mixing declarations and code is incompatible with standards before C99 [-Wdeclaration-after-statement]
        uint32_t hex_value = 0x3de147ae; // Example hex value
                 ^
main.c(17): warning: unused variable 'accZ' [-Wunused-variable]
        int16_t accZ = 0x0;
                ^
main.c(31): warning: variable 'MZ2' set but not used [-Wunused-but-set-variable]
        float MZ2 = 0x0;
              ^
main.c(56): warning: variable 'float_value' set but not used [-Wunused-but-set-variable]
        float float_value;
              ^
37 warnings generated.
compiling main.c...
compiling system_stm32l0xx.c...
assembling startup_stm32l053xx.s...
linking...
Program Size: Code=8984 RO-data=936 RW-data=0 ZI-data=1632  
".\Objects\Laboratorinis1.axf" - 0 Error(s), 37 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.9.0.pack
                ARM.CMSIS.5.9.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.6.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32L0xx_DFP.2.2.0.pack
                Keil.STM32L0xx_DFP.2.2.0
                STMicroelectronics STM32L0 Series Device Support, Drivers and Examples
   * Component: Startup Version: 1.12.1

<h2>Collection of Component include folders:</h2>
  ./RTE/_Target_1
  C:/Users/simon/AppData/Local/Arm/Packs/ARM/CMSIS/5.9.0/CMSIS/Core/Include
  C:/Users/simon/AppData/Local/Arm/Packs/Keil/STM32L0xx_DFP/2.2.0/Drivers/CMSIS/Device/ST/STM32L0xx/Include

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.6.0

   * Component: Keil.Standalone::Device:Startup:1.12.1
      Source file:   Drivers/CMSIS/Device/ST/STM32L0xx/Source/Templates/arm/startup_stm32l053xx.s
      Source file:   MDK/Device/Source/ARM/STM32L0xx_OPT.s
      Include file:  Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h
      Source file:   Drivers/CMSIS/Device/ST/STM32L0xx/Source/Templates/system_stm32l0xx.c
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
